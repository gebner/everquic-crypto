[
  "·ïØÑi\"´Í˜©Ïm\u0014c¥™",
  [
    [
      "QUIC.Parse.VarInt.varint_bound",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "d04905fe0b443e8a8fdda1f464ac1f9b"
    ],
    [
      "QUIC.Parse.VarInt.synth_u14",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "b302d75153fd00986038eb14ac55c049"
    ],
    [
      "QUIC.Parse.VarInt.synth_u14_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_FStar.UInt8.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v"
      ],
      0,
      "dbb7ce48939e01e846d136e4b1a879ed"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "4e719c10c7d630f27ef026f9cd89341f"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1073e283e01e88d118293cecd8b11ab1",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_u30", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "c9b269af48936ef693d4401e6fbf45f4"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "02870c4f93e6429d8d964594bcbf6347"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_msb",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "cbb9b59c813ab80eb911318f0f36cffd"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "1ed44241ce9f88ff08f9f34462835fba"
    ],
    [
      "QUIC.Parse.VarInt.id_u14",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "3fc014616fd02382a6a1d7706ceff0e7"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u14",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "typing_FStar.UInt64.v"
      ],
      0,
      "fccace2ca0fb2fdda89f687d8c357407"
    ],
    [
      "QUIC.Parse.VarInt.id_u30",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "b1044f2f5f132d5ed73b176199a37f08"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u30",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "typing_FStar.UInt64.v"
      ],
      0,
      "7d7f94cbacd0b6cb85e59ccd75fb92bc"
    ],
    [
      "QUIC.Parse.VarInt.id_u62",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "6c0a1cbf86f12ea02c66f9249f340f9c"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u62",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u62",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.UInt64.v"
      ],
      0,
      "daa1eb296d59fd945edd501369143f36"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_14_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8", "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "b7ae7c034e70e08adc6a1241bbd1aaaa"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_30_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.uv_inv",
        "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u30"
      ],
      0,
      "5f110ad70af04c4e487a454f09f6247d"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_62_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_QUIC.Parse.VarInt.synth_u62", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "4d6b2a564ff8291f68756029a090ed14"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.BitVector.logand_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.BitVector.bv_t",
        "equation_FStar.BitVector.shift_right_vec",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.logand",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.shift_right", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.parse_ret_kind",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "function_token_typing_FStar.UInt8.uint_to_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.bool", "int_typing",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.UInt.inverse_vec_lemma", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_e2d5d62a90ceed8a6faf9d20615f4e1e",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.BitVector.logand_vec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.logand",
        "typing_FStar.UInt.to_vec", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.logand", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "14a1c65ce45ad36fcbd765b4bcf87be1"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.logand",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.parse_ret", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_FStar.UInt8.v",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.shift_right_value_lemma",
        "lemma_FStar.UInt8.uv_inv", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.logand", "typing_FStar.UInt8.logand",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "0eea47821b82738c867d601d27123e84"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.and_then_cases_injective_precond",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_FStar.UInt8.v", "int_typing",
        "lemma_FStar.UInt8.uv_inv", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "01fd760c5773264d129e8c6a95068f7c"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "32c097245b31f55b2b8f3f93b7602be8"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "e84907adc7e42c150fa633b68e7a7038"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq_aux",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_bare",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash", "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "interpretation_Tm_abs_397e6cf1fcb1b274e710f2d8ab90012c",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_LowParse.Spec.Combinators.and_then_bare",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_FStar.Pervasives.Native.uu___is_None",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "34da851aedf5461c97f59581d653074c"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "532e402252d7187655446c3338a32b4b"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Seq.Properties_interpretation_Tm_ghost_arrow_9a34a9deaac3ca72ad48c3ec79b6656c",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_dcf3da547057a573662631e04de3bb1c",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield8",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_ret",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_QUIC.Parse.VarInt.filter_u62",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt.shift_right_value_lemma",
        "lemma_FStar.UInt32.vu_inv", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_05a433f7087a6eba466eaf265d30e334",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_1c46ea0c48f091c432c010e697623264",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.logand",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.BitFields.u8_shift_right",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.Combinators.parse_filter_refine",
        "typing_LowParse.Spec.Int.parse_u8", "typing_QUIC.Parse.VarInt.p7",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "e3551ba47888c760b2a9757b57f6accd"
    ],
    [
      "QUIC.Parse.VarInt.get_tag",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BitFields.uint8", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_Prims.__cache_version_number__", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.BitFields.uint8",
        "typing_Prims.pow2"
      ],
      0,
      "e79a55f3e64eec2a071f8be4c626598a"
    ],
    [
      "QUIC.Parse.VarInt.get_msb",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t", "int_typing",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "18d65e0ddf8e2b8aebd2ef5f56da79f9"
    ],
    [
      "QUIC.Parse.VarInt.get_first_byte",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BitFields.bitfield",
        "equation_LowParse.Spec.BitFields.uint8", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.get_msb",
        "equation_QUIC.Parse.VarInt.get_tag",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.v", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_170c491d753eea3cee6b4f8d9bab70e1",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_eb597295cc732ea30a1a82b5934ac7ee",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint64_to_uint8", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_LowParse.Spec.BitFields.uint8",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.get_msb",
        "typing_QUIC.Parse.VarInt.get_tag"
      ],
      0,
      "16f013bb2d9eafff440ce296dc8caa7c"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.varint_bound",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt64.v", "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "83e52bcd2305357bf0f64fedb6cfd001"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_749e7553be79870b3f9245eb0105cd99",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_cab2a0e6c05fb6f71bbcd44f41b9dd42",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_d57f39e9ef175950c08a90848f70a3a8",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.BitVector.bv_t",
        "equation_FStar.BitVector.shift_left_vec",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.shift_left", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.lt",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield8",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.BitFields.not_bitfield_mask8",
        "equation_LowParse.BitFields.set_bitfield8",
        "equation_LowParse.BitFields.u8_shift_left",
        "equation_LowParse.BitFields.u8_shift_right",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.serializer",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BitFields.bitfield",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.get_first_byte",
        "equation_QUIC.Parse.VarInt.get_msb",
        "equation_QUIC.Parse.VarInt.get_tag",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_payload",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_FStar.UInt.to_vec.fuel_instrumented",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_FStar.UInt8.uint_to_t",
        "function_token_typing_FStar.UInt8.v",
        "function_token_typing_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.bool", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_FStar.UInt.index_to_vec_ones",
        "lemma_FStar.UInt.inverse_num_lemma", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt.shift_left_value_lemma",
        "lemma_FStar.UInt32.vu_inv", "lemma_FStar.UInt64.uv_inv",
        "lemma_FStar.UInt64.vu_inv", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowParse.Spec.BitFields.uint_get_bitfield_set_bitfield_other",
        "lemma_LowParse.Spec.BitFields.uint_get_bitfield_set_bitfield_same",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_set_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_set_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_170c491d753eea3cee6b4f8d9bab70e1",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_1c46ea0c48f091c432c010e697623264",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_279a02002c16e48072a67c9dfe25c56b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_40913005fcdb02d3c1a9de40e3088fb6",
        "refinement_interpretation_Tm_refine_40a24c6c363915cd0813473da688de21",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f26b4cf192214f98f45c83c05cdd64",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_60e95c809640d020e84e558feebbedbc",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_79d30f0bd2097427fe8d96697e20df0f",
        "refinement_interpretation_Tm_refine_7e0b9b2dbca36eab00de093c1b701c6d",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_85bc66aa0a6134f1e67aa8128884d53c",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_90f3e88ac21bdb91e42538f99dc76067",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_c9e761bfcbc2fe63ca85382e0da61d9f",
        "refinement_interpretation_Tm_refine_cea82fdb2c3c307d773cae3c18ebf2b8",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e2d5d62a90ceed8a6faf9d20615f4e1e",
        "refinement_interpretation_Tm_refine_eb597295cc732ea30a1a82b5934ac7ee",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.BitFields.set_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__set_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32",
        "typing_FStar.Int.Cast.uint64_to_uint8",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt.lt",
        "typing_FStar.UInt.to_vec", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.div", "typing_FStar.UInt64.lte",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.rem",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.logand", "typing_FStar.UInt8.logor",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.not_bitfield_mask8",
        "typing_LowParse.BitFields.u8_shift_left",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Combinators.serialize_nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_QUIC.Parse.VarInt.get_first_byte",
        "typing_QUIC.Parse.VarInt.get_msb",
        "typing_QUIC.Parse.VarInt.get_tag",
        "typing_QUIC.Parse.VarInt.serialize_varint_payload",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "a6cf89821ff40fd694d9d91be0f22cb9"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "00d31d3d56677a03206e99b3ce071a36"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "QUIC.Parse.VarInt_interpretation_Tm_ghost_arrow_39d1cd22875ef829c9cabc95e40cb6f2",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_QUIC.Parse.VarInt.serialize_varint_",
        "token_correspondence_QUIC.Parse.VarInt.serialize_varint_"
      ],
      0,
      "a3dce10330a9f85474b623dd6cd2174b"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "790758dd6ec337fc1516e897dca597d2"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "19be25bc64e92da172e16ecff0e14e77"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "40ce6cabbef10cfb83cb59ce2e30a67f"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "2f523490b5e1bd9691d9f543d5116206"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_in_bounds", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.BoundedInt.in_bounds"
      ],
      0,
      "71f4d83d7197783a573f27d68357b9a2"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "c5707af5a49a00dfc22feb563411d8c2"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_d81abe167fb75473bbfd9523c6fc3461",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "ab8723d8e6d20663fafd5f8f3f9e7ee0"
    ],
    [
      "QUIC.Parse.VarInt.validate_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "b994ea0947c61536f08113b5e6fb764d"
    ],
    [
      "QUIC.Parse.VarInt.validate_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.gt", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.gt",
        "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Low.Base.validator_error",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_FStar.UInt8.v", "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.slice_access_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_1afc85baa7cde4c5ffc806e27db40aaa",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2a85fdc19dfab41481bbd003e8a058df",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_5323909fa5b896f0e07d39676f471a2d",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d105debe5d6fc28d16f6ff27d2ebee",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_a0e6b2052b4c9900d0c77acd9e9de3f6",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f040c3dca6fd05e971df1f945f5a4d48",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "true_interp", "typing_FStar.Map.contains",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.contents_",
        "typing_LowParse.Low.Base.get_valid_pos",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_typing"
      ],
      0,
      "7169967138e3edda58d5a787be4fe8f2"
    ],
    [
      "QUIC.Parse.VarInt.read_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "d49f2c622417df6962669c9af254c41e"
    ],
    [
      "QUIC.Parse.VarInt.read_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_Tm_unit", "data_elim_LowParse.Slice.Mkslice",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_FStar.UInt8.v", "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.slice_access_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2528f0dbb1f4ddd734d9c1dc70516922",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_5323909fa5b896f0e07d39676f471a2d",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d105debe5d6fc28d16f6ff27d2ebee",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_a0e6b2052b4c9900d0c77acd9e9de3f6",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_ea33e92687b791ef51fc3d2bfc7605b0",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "true_interp", "typing_FStar.Map.contains",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.content_length_",
        "typing_LowParse.Low.Base.contents_",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_typing"
      ],
      0,
      "8f1d2880d10d2bdbb832568d3142d8d9"
    ],
    [
      "QUIC.Parse.VarInt.jump_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "c97f5e4911aaca524b2ea219c043be66"
    ],
    [
      "QUIC.Parse.VarInt.jump_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit", "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_1afc85baa7cde4c5ffc806e27db40aaa",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2528f0dbb1f4ddd734d9c1dc70516922",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_47322f0fd929bb5378f890c940e9b160",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_ea33e92687b791ef51fc3d2bfc7605b0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.content_length_",
        "typing_LowParse.Low.Base.get_valid_pos",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "1a04307ebf1937f834817cc0f386607c"
    ],
    [
      "QUIC.Parse.VarInt.seq_slice_i_j_k",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_Prims.nat", "equation_Prims.squash",
        "int_inversion", "int_typing", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice"
      ],
      0,
      "978fdeab0171ff87d0ed2241893dfacf"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_impl",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "aa63309ea89d2e1c9b4419e59c0e287a"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_impl",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Monotonic.HyperStack.live_region",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.writable",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.get_first_byte",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.serialize_varint",
        "equation_QUIC.Parse.VarInt.serialize_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_payload",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok", "l_and-interp",
        "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_is_empty",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.live_region_frameOf",
        "lemma_LowStar.Monotonic.Buffer.loc_buffer_from_to_eq",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_gsub_buffer_l",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_1655f485d17007fbb30a549ec946ac81",
        "refinement_interpretation_Tm_refine_32292ee3c96dfb5ae60c6b4a7d0bd963",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8042aec9cc820f03fef16e9373058b98",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_9da36c7d614ff07b8eb3c395029ef383",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b361ba8089a6e963921008d537e799a1",
        "refinement_interpretation_Tm_refine_b7f38b1800bdb517fbf481e3b90d9816",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_QUIC.Parse.VarInt.serialize_varint_",
        "typing_FStar.Monotonic.HyperStack.live_region",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_FStar.UInt32.sub", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.frameOf",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.loc_buffer_from_to",
        "typing_QUIC.Parse.VarInt.get_first_byte",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.serialize_varint",
        "typing_QUIC.Parse.VarInt.serialize_varint_",
        "typing_QUIC.Parse.VarInt.serialize_varint_payload",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "e34171faa1189af97746d0cbddea1eeb"
    ],
    [
      "QUIC.Parse.VarInt.validate_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9dc9f3b2272e02249931f44073e870d4",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v"
      ],
      0,
      "4406102c649878986da86ab83ff12327"
    ],
    [
      "QUIC.Parse.VarInt.validate_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_5aed5d86f0f1c2bd4946c7e8db3b69ef",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_9dc9f3b2272e02249931f44073e870d4",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "b04faef0446041a55171d12be8eb1ce6"
    ],
    [
      "QUIC.Parse.VarInt.read_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "db5f7dfd3711ebb674138d79782841a5"
    ],
    [
      "QUIC.Parse.VarInt.read_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "7e43e9593588cd35fa5356ae4773badb"
    ],
    [
      "QUIC.Parse.VarInt.jump_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "c6568b8b747d43f032ea5c273d3bff55"
    ],
    [
      "QUIC.Parse.VarInt.jump_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "4e75f73f29747bbb89f3574f7d717a23"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint_impl",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "652548ca349363d6edc6d4b3a8889efd"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint_impl",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_d81abe167fb75473bbfd9523c6fc3461",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserConsumesAll",
        "constructor_distinct_LowParse.Spec.Base.ParserStrong",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserConsumesAll@tok",
        "equality_tok_LowParse.Spec.Base.ParserStrong@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "05e1234ea816eacae17b82eb54adc0f9"
    ]
  ]
]