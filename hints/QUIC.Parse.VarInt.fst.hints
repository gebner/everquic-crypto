[
  "p?4\u0014¥\u0002ß\u0005gÂª7\u001däÒ\u000b",
  [
    [
      "QUIC.Parse.VarInt.synth_u14",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "f59ac7cf80793b6c36e35ec0ccff1f49"
    ],
    [
      "QUIC.Parse.VarInt.synth_u14_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_FStar.UInt8.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v"
      ],
      0,
      "a97ab7b01a41293a69203055e124cf57"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "a98e025cf95cae3750a03dcac27dad5e"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "d1e21b0c0fffbef3c3d5108e12962340"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "275ae1325c033ba5b255c92100a84c29"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_msb",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "d1eff4be3d4497bc0e49dac4d9ee6ff3"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "ae6e9f9590418f9124ff4471d1483b8a"
    ],
    [
      "QUIC.Parse.VarInt.id_u14",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "2fc09cc3a254578c2d2edd3c452fc620"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u14",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "typing_FStar.UInt64.v"
      ],
      0,
      "ac4109c2aba578dd627abb76a9480661"
    ],
    [
      "QUIC.Parse.VarInt.id_u30",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "c4f8503486944322e7d7ca5289916829"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u30",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "typing_FStar.UInt64.v"
      ],
      0,
      "dcd95708511730bd0f43c362885415ad"
    ],
    [
      "QUIC.Parse.VarInt.id_u62",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "383443e8244c21895bdba4c387272114"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u62",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u62",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_t",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.UInt64.v"
      ],
      0,
      "04f6fe021b2d8782a000f0b0e1549b8f"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_14_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8", "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "eafc91959ce6b4c84b6dc69c95f4fe0a"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_30_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "811a87a68b2d5fa494702961327f3dc0"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_62_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_QUIC.Parse.VarInt.synth_u62", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "e14c7b240998c6f01bc8c2d157a0f4d3"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_ret_kind",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.UInt64.v", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "eebb3b8a41cc05f0373eab81d40ce338"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_ret", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt8.uv_inv",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_QUIC.Spec.Base.uint62_bound", "unit_inversion", "unit_typing"
      ],
      0,
      "d9bf2456d22aa739b0b2f05640553a87"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Combinators.and_then_cases_injective_precond",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_typing", "lemma_FStar.UInt8.uv_inv",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_Equality",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "8b31c6e78501139a0c9faa5267b80928"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "db16400098d7e28bbe05e98274228cf6"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "c9c6fcfbabb7aae2e1f75527f1c47e6b"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq_aux",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_bare",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash", "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "interpretation_Tm_abs_397e6cf1fcb1b274e710f2d8ab90012c",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.Spec.Combinators.and_then_bare",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_FStar.Pervasives.Native.uu___is_None",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "1f8a534ff58879e52aed7e50b5564e2d"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.Base.uint62_bound",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_6c107d57ecf690b668babb434deb9549",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_Prims.pow2", "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "aa675a52d98f1890a5a64a89be5344e6"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Seq.Properties_interpretation_Tm_ghost_arrow_9a34a9deaac3ca72ad48c3ec79b6656c",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_ef24030b04dd6820b373d01c8569f902",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_ret",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "function_token_typing_QUIC.Parse.VarInt.filter_u62",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv", "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_6c107d57ecf690b668babb434deb9549",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.Combinators.parse_filter_refine",
        "typing_LowParse.Spec.Int.parse_u8", "typing_QUIC.Parse.VarInt.p7",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.Base.uint62_bound", "unit_inversion", "unit_typing"
      ],
      0,
      "3ed3f00b89c266df3cd8af12245a5e06"
    ],
    [
      "QUIC.Parse.VarInt.get_tag",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt8.vu_inv", "lemma_LowParse.BitFields.uint8_v_eq",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_80b9fa1848cd4b08f626f8a84eef7f15",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.uint_to_t", "typing_LowParse.BitFields.uint8",
        "typing_Prims.pow2"
      ],
      0,
      "c100c113cfd1792c864c49ec790349da"
    ],
    [
      "QUIC.Parse.VarInt.get_msb",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_Prims.nat",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t", "int_typing",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "1697983b7e78fbea260e1f94a1802cc6"
    ],
    [
      "QUIC.Parse.VarInt.get_first_byte",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.bitfield", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.get_msb",
        "equation_QUIC.Parse.VarInt.get_tag",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_eb597295cc732ea30a1a82b5934ac7ee",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe6ede4f8e6d9788d0e2570cc7686e3a",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint64_to_uint8", "typing_FStar.UInt64.v",
        "typing_LowParse.BitFields.uint8",
        "typing_QUIC.Parse.VarInt.get_msb",
        "typing_QUIC.Parse.VarInt.get_tag"
      ],
      0,
      "5e92560fda7717936e9149951ad857eb"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.mod",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_QUIC.Spec.Base.uint62_bound",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "e2a284c5617ac4cb55713b305293e3d0"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "87bb8e03461d6b4aefd101c01aebef67"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "QUIC.Parse.VarInt_interpretation_Tm_ghost_arrow_e8bf4a0626080c73af8506c0e7b93ca0",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_QUIC.Spec.Base.uint62_t",
        "function_token_typing_QUIC.Parse.VarInt.serialize_varint_",
        "token_correspondence_QUIC.Parse.VarInt.serialize_varint_"
      ],
      0,
      "f77d9acc896df13635f7c9ab38136da0"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v"
      ],
      0,
      "bac11971ec110de42fe1cc8a609971f8"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "7a37384f326a9f77c479fdf3f5da5fc0"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_cab864f295b00d2aaeb841703f9776bb",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "5e1dd0c13eb190d984e4a2da4d952d01"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "7619ecc895a35f63a03d9f9ce3c78910"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_bound", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.BoundedInt.in_bounds"
      ],
      0,
      "7008a84be675d85b1f06228eb287646d"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "98d7fd9cd3b6931899b731b2c8842a47"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_270f57c2aa2bf7ac5265c9880e1736fa",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_cab864f295b00d2aaeb841703f9776bb",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "d0980d32d9d53c576e398b2360c564d1"
    ],
    [
      "QUIC.Parse.VarInt.validate_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "39ffc064a0264b38a5acfcae41398360"
    ],
    [
      "QUIC.Parse.VarInt.validate_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.gt", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt32.gt",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Low.Base.validator_error",
        "equation_LowParse.Low.Base.validator_max_length",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.slice_access_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.length_null_1",
        "lemma_LowStar.Monotonic.Buffer.length_null_2",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_1afc85baa7cde4c5ffc806e27db40aaa",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2a85fdc19dfab41481bbd003e8a058df",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_5323909fa5b896f0e07d39676f471a2d",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d105debe5d6fc28d16f6ff27d2ebee",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_6c107d57ecf690b668babb434deb9549",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_a0e6b2052b4c9900d0c77acd9e9de3f6",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f040c3dca6fd05e971df1f945f5a4d48",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "token_correspondence_Prims.pow2.fuel_instrumented", "true_interp",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.contents_",
        "typing_LowParse.Low.Base.get_valid_pos",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.Base.uint62_bound", "unit_typing"
      ],
      0,
      "ea11a7402a7a89b5a0707d3a74ac3329"
    ],
    [
      "QUIC.Parse.VarInt.read_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "26559a5db4e7b7cc610794b1d72a2fa3"
    ],
    [
      "QUIC.Parse.VarInt.read_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_Tm_unit",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.Pervasives.Native.fst",
        "equation_FStar.Pervasives.Native.snd", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Low.Combinators.clens_fst",
        "equation_LowParse.Low.Combinators.clens_snd",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_00676929318b14dfd08ffa5b812ab4d0",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.slice_access_frame_weak",
        "lemma_LowParse.Low.Base.slice_access_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_sym_",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__1",
        "proj_equation_FStar.Pervasives.Native.Mktuple2__2",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_cond",
        "proj_equation_LowParse.Low.Base.Mkclens_clens_get",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_cond",
        "projection_inverse_LowParse.Low.Base.Mkclens_clens_get",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_5323909fa5b896f0e07d39676f471a2d",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_54d105debe5d6fc28d16f6ff27d2ebee",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_6c107d57ecf690b668babb434deb9549",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_a0e6b2052b4c9900d0c77acd9e9de3f6",
        "refinement_interpretation_Tm_refine_a5b8ddbdb556f04eb8dc4cc32236b080",
        "refinement_interpretation_Tm_refine_c16bc1b61f58b349bf6fc1c94dcaf83b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_ea33e92687b791ef51fc3d2bfc7605b0",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_FStar.Pervasives.Native.fst",
        "token_correspondence_FStar.Pervasives.Native.snd",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_cond",
        "token_correspondence_LowParse.Low.Base.__proj__Mkclens__item__clens_get",
        "true_interp", "typing_FStar.Map.contains",
        "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.content_length_",
        "typing_LowParse.Low.Base.contents_",
        "typing_LowParse.Low.Combinators.clens_fst",
        "typing_LowParse.Low.Combinators.clens_snd",
        "typing_LowParse.Low.Combinators.gaccessor_fst",
        "typing_LowParse.Low.Combinators.gaccessor_snd",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.Base.uint62_bound", "unit_typing"
      ],
      0,
      "f3af79a21c7a570838072cd798dcc4f4"
    ],
    [
      "QUIC.Parse.VarInt.jump_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "c5a5e39a4c43f7ec0988aa13718af98c"
    ],
    [
      "QUIC.Parse.VarInt.jump_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit", "data_elim_LowParse.Slice.Mkslice",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Monotonic.HyperHeap.hmap",
        "equation_FStar.Monotonic.HyperStack.is_tip",
        "equation_FStar.Monotonic.HyperStack.is_wf_with_ctr_and_tip",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.content_length_",
        "equation_LowParse.Low.Base.contents_",
        "equation_LowParse.Low.Base.valid_",
        "equation_LowParse.Low.Base.valid_content",
        "equation_LowParse.Low.Base.valid_content_pos",
        "equation_LowParse.Low.Base.valid_pos",
        "equation_LowParse.Slice.buffer_srel_of_srel",
        "equation_LowParse.Slice.bytes_of_slice_from",
        "equation_LowParse.Slice.loc_slice_from",
        "equation_LowParse.Slice.srel", "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.Slice.slice",
        "function_token_typing_FStar.Monotonic.Heap.heap",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Map.lemma_ContainsDom",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Low.Base.content_length_post",
        "lemma_LowParse.Low.Base.get_valid_pos_post",
        "lemma_LowParse.Low.Base.valid_elim_",
        "lemma_LowParse.Low.Base.valid_frame",
        "lemma_LowParse.Low.Base.valid_pos_get_valid_pos",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.loc_disjoint_none_r",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_none",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Slice.Mkslice_base",
        "proj_equation_LowParse.Slice.Mkslice_len",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_05e15190c946858f68c69156f585f95a",
        "refinement_interpretation_Tm_refine_1afc85baa7cde4c5ffc806e27db40aaa",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_3ae7934f7bb0b211572daa2c0f2cb446",
        "refinement_interpretation_Tm_refine_418d706424f9bde3d684d13efc86237c",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_47322f0fd929bb5378f890c940e9b160",
        "refinement_interpretation_Tm_refine_5348cbe3ab67c360ebc810b4160b4210",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_870dc8a73b27151e0403bb23ded8a971",
        "refinement_interpretation_Tm_refine_a5b8ddbdb556f04eb8dc4cc32236b080",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_ea33e92687b791ef51fc3d2bfc7605b0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe73bdb8b9cb8fc03d6c2d252618ec90",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "typing_FStar.Map.contains", "typing_FStar.Monotonic.HyperHeap.rid",
        "typing_FStar.Monotonic.HyperStack.get_hmap",
        "typing_FStar.Monotonic.HyperStack.get_tip",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.sub",
        "typing_FStar.UInt32.v", "typing_LowParse.Low.Base.content_length",
        "typing_LowParse.Low.Base.content_length_",
        "typing_LowParse.Low.Base.get_valid_pos",
        "typing_LowParse.Slice.__proj__Mkslice__item__base",
        "typing_LowParse.Slice.__proj__Mkslice__item__len",
        "typing_LowParse.Slice.bytes_of_slice_from",
        "typing_LowParse.Slice.loc_slice_from",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.loc_none",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "62e1a603f31e93c0e4218cb9264c8917"
    ],
    [
      "QUIC.Parse.VarInt.seq_slice_i_j_k",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_Prims.nat", "equation_Prims.squash",
        "int_inversion", "int_typing", "l_and-interp",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.length",
        "typing_FStar.Seq.Base.slice"
      ],
      0,
      "a566c1809c54e3749f99a5420d69a089"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_impl",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "81756be3ac525b8a47eb6d8cdfd804fa"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_impl",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Monotonic.HyperStack.live_region",
        "equation_FStar.Monotonic.HyperStack.mem",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Low.Base.writable",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind",
        "equation_LowStar.Monotonic.Buffer.length", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.get_first_byte",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.serialize_varint",
        "equation_QUIC.Parse.VarInt.serialize_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_payload",
        "equation_QUIC.Spec.Base.uint62_bound",
        "equation_QUIC.Spec.Base.uint62_t",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok", "l_and-interp",
        "lemma_FStar.Ghost.reveal_hide",
        "lemma_FStar.HyperStack.ST.lemma_equal_domains_trans",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_is_empty",
        "lemma_FStar.UInt32.uv_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowStar.Monotonic.Buffer.length_as_seq",
        "lemma_LowStar.Monotonic.Buffer.live_region_frameOf",
        "lemma_LowStar.Monotonic.Buffer.loc_buffer_from_to_eq",
        "lemma_LowStar.Monotonic.Buffer.loc_includes_gsub_buffer_l",
        "lemma_LowStar.Monotonic.Buffer.modifies_trans_linear",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_2c91ccb3b588ed3df8c6535cfb3304df",
        "refinement_interpretation_Tm_refine_33772402038920aae87ec52a50ea4264",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_437ad94273dd97aa728601df521e5d92",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8d0f38ada62f61477e72574547d006ba",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b306b165ee90bae02c37fdb65d19d1ff",
        "refinement_interpretation_Tm_refine_b361ba8089a6e963921008d537e799a1",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_ff3f214a1d72a8cdeaa968f7e92cedb4",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_kinding_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "token_correspondence_QUIC.Parse.VarInt.serialize_varint_",
        "typing_FStar.Monotonic.HyperStack.live_region",
        "typing_FStar.Seq.Base.append", "typing_FStar.Seq.Base.empty",
        "typing_FStar.Seq.Base.length", "typing_FStar.Seq.Base.slice",
        "typing_FStar.UInt32.sub", "typing_FStar.UInt32.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_LowStar.Monotonic.Buffer.as_seq",
        "typing_LowStar.Monotonic.Buffer.frameOf",
        "typing_LowStar.Monotonic.Buffer.len",
        "typing_LowStar.Monotonic.Buffer.loc_buffer_from_to",
        "typing_QUIC.Parse.VarInt.get_first_byte",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.serialize_varint",
        "typing_QUIC.Parse.VarInt.serialize_varint_",
        "typing_QUIC.Parse.VarInt.serialize_varint_payload",
        "typing_QUIC.Spec.Base.uint62_bound"
      ],
      0,
      "8615fb7576a5f6b5539e74927dba1d29"
    ],
    [
      "QUIC.Parse.VarInt.validate_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9dc9f3b2272e02249931f44073e870d4",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v"
      ],
      0,
      "68d36e1514b3ab801f31c102e3d39e49"
    ],
    [
      "QUIC.Parse.VarInt.validate_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_d40e83e132985b2dafb73bef2c2a45e3",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_9dc9f3b2272e02249931f44073e870d4",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "d52e5cc4faf7c7886f7e1ff090560776"
    ],
    [
      "QUIC.Parse.VarInt.read_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "029d642259aa1a4e357407b6c368dc41"
    ],
    [
      "QUIC.Parse.VarInt.read_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_cab864f295b00d2aaeb841703f9776bb",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v"
      ],
      0,
      "58a55a1c7c3bbbd166a753cf9b9a34e9"
    ],
    [
      "QUIC.Parse.VarInt.jump_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "5f84dbf153b4368f42f6268b86d4d4d0"
    ],
    [
      "QUIC.Parse.VarInt.jump_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_cab864f295b00d2aaeb841703f9776bb",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "da91b8fcaf5104a522bf5f3e86a42f13"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint_impl",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "b7dcb4ecd8dc7c58ed148ccb0583c1c8"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint_impl",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_270f57c2aa2bf7ac5265c9880e1736fa",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_cab864f295b00d2aaeb841703f9776bb",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Spec.Base.uint62_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_ebd33c4f8daed8b12d67bfecc5777ea9",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "8b5e19420ee05392c108b576434dd015"
    ]
  ]
]