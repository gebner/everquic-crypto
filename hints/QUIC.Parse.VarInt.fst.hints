[
  "Íé©ßÏ§êèê‚\u001dYz±hâ",
  [
    [
      "QUIC.Parse.VarInt.varint_bound",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "4b3d0fe6483cbd4ac36d2e11f2676dd2"
    ],
    [
      "QUIC.Parse.VarInt.synth_u14",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "499e03b7d443ac0b7eb9a7a8ea92a42f"
    ],
    [
      "QUIC.Parse.VarInt.synth_u14_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_FStar.UInt8.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v"
      ],
      0,
      "6c5eab7a9178cfa909d14a6b0da329fb"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "857fec9f993e41424acc4d3cf6f5a8e7"
    ],
    [
      "QUIC.Parse.VarInt.synth_u30_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1073e283e01e88d118293cecd8b11ab1",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_u30", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "efc4e1c3cb66362d370d1996725400e3"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "783f38c4a293bf6209e375333e004a94"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_msb",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "4c41935ab891b41e7f36e9f77befdcec"
    ],
    [
      "QUIC.Parse.VarInt.synth_u62_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "33784ee9f6a409b55d40dbf535b8b803"
    ],
    [
      "QUIC.Parse.VarInt.id_u14",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "2544902363b40f7971f2f1791bffc37d"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u14",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "typing_FStar.UInt64.v"
      ],
      0,
      "4ab47c173418e2113e6dd65081117c09"
    ],
    [
      "QUIC.Parse.VarInt.id_u30",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "5c1d2a7a0cc9bc94b835e53c305acd50"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u30",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "typing_FStar.UInt64.v"
      ],
      0,
      "cca74d4a1c235abef45991030489f96a"
    ],
    [
      "QUIC.Parse.VarInt.id_u62",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "f597b15ee7a2e9a75ed05fd6293e59d4"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_u62",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.and_then_metadata",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.id_u62",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.UInt64.v"
      ],
      0,
      "83db86ae64bfd168cb1e3de50c39438b"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_14_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt8.t", "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8", "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "ecb17f85012f8472b4792944ae728b09"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_30_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.uv_inv",
        "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_u30"
      ],
      0,
      "b681f546206356e6f6e1d755c462d3a9"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_62_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_QUIC.Parse.VarInt.synth_u62", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "983af905035606c34e7df6b0120b2438"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.BitVector.logand_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.BitVector.bv_t",
        "equation_FStar.BitVector.shift_right_vec",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.logand",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.shift_right", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.parse_ret_kind",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "function_token_typing_FStar.UInt8.uint_to_t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.bool", "int_typing",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.UInt.inverse_vec_lemma", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_e2d5d62a90ceed8a6faf9d20615f4e1e",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.BitVector.logand_vec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.logand",
        "typing_FStar.UInt.to_vec", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.logand", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "9e1f65e8ce6cbfa68dd7c3cb4c2dc51f"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.logand",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.parse_ret", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_FStar.UInt8.v",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.shift_right_value_lemma",
        "lemma_FStar.UInt8.uv_inv", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.logand", "typing_FStar.UInt8.logand",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "7ac6fe092268690807a04db623b1dfc5"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.Combinators.and_then_cases_injective_precond",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_FStar.UInt8.v", "int_typing",
        "lemma_FStar.UInt8.uv_inv", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "38c997e09283a427a0c626ffe7de4ff0"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "a9f6ffb14d970e5b546d1914397492be"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c"
      ],
      0,
      "298273fd49cbb55c86898e3927edf1d2"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq_aux",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.and_then_bare",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash", "equation_QUIC.Parse.VarInt.parse_varint",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_QUIC.Parse.VarInt.parse_varint_payload_and_then_cases_injective",
        "interpretation_Tm_abs_397e6cf1fcb1b274e710f2d8ab90012c",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "token_correspondence_LowParse.Spec.Combinators.and_then_bare",
        "token_correspondence_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_FStar.Pervasives.Native.uu___is_None",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_QUIC.Parse.VarInt.parse_varint",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "59d7a8c44bd5bebd86f5b8439bb7acb4"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "d293d4ca91a1c9a2f06aa89fb05a8b6e"
    ],
    [
      "QUIC.Parse.VarInt.parse_varint_eq",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Seq.Properties_interpretation_Tm_ghost_arrow_9a34a9deaac3ca72ad48c3ec79b6656c",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_dcf3da547057a573662631e04de3bb1c",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Tm_unit",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield8",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_ret",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.filter_u14",
        "equation_QUIC.Parse.VarInt.filter_u30",
        "equation_QUIC.Parse.VarInt.filter_u62",
        "equation_QUIC.Parse.VarInt.id_u14",
        "equation_QUIC.Parse.VarInt.id_u30",
        "equation_QUIC.Parse.VarInt.id_u62", "equation_QUIC.Parse.VarInt.p7",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Parse.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Parse.VarInt.synth_u14",
        "equation_QUIC.Parse.VarInt.synth_u30",
        "equation_QUIC.Parse.VarInt.synth_u62",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_QUIC.Parse.VarInt.filter_u62",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt.shift_right_value_lemma",
        "lemma_FStar.UInt32.vu_inv", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv",
        "lemma_QUIC.Parse.VarInt.synth_u14_injective",
        "lemma_QUIC.Parse.VarInt.synth_u30_injective",
        "lemma_QUIC.Parse.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "refinement_interpretation_Tm_refine_05a433f7087a6eba466eaf265d30e334",
        "refinement_interpretation_Tm_refine_07b37bbf4d2e1a875199523bb9978c4d",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_1c46ea0c48f091c432c010e697623264",
        "refinement_interpretation_Tm_refine_20492d3ac772c9d4255c715e5a6098f6",
        "refinement_interpretation_Tm_refine_29c4dd813290749226334aea6b6c20aa",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_91974dea97c24961fc42db4d4fd55d8f",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_kinding_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Parse.VarInt.id_u14",
        "token_correspondence_QUIC.Parse.VarInt.id_u30",
        "token_correspondence_QUIC.Parse.VarInt.id_u62",
        "token_correspondence_QUIC.Parse.VarInt.synth_u14",
        "token_correspondence_QUIC.Parse.VarInt.synth_u30",
        "token_correspondence_QUIC.Parse.VarInt.synth_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.logand",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.get_bitfield8",
        "typing_LowParse.BitFields.u8_shift_right",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.Combinators.parse_filter_refine",
        "typing_LowParse.Spec.Int.parse_u8", "typing_QUIC.Parse.VarInt.p7",
        "typing_QUIC.Parse.VarInt.parse_varint_kind",
        "typing_QUIC.Parse.VarInt.parse_varint_payload",
        "typing_QUIC.Parse.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "b1c3336923c78e9e027632fcc3ebb284"
    ],
    [
      "QUIC.Parse.VarInt.get_tag",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BitFields.uint8", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_Prims.__cache_version_number__", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt8.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_FStar.UInt8.v",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.BitFields.uint8",
        "typing_Prims.pow2"
      ],
      0,
      "f0984d16284b0a75c5f79ed6876d3599"
    ],
    [
      "QUIC.Parse.VarInt.get_msb",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_t", "int_typing",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "b45d9ab14a1d912dda25f9b49926d607"
    ],
    [
      "QUIC.Parse.VarInt.get_first_byte",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BitFields.bitfield",
        "equation_LowParse.Spec.BitFields.uint8", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.get_msb",
        "equation_QUIC.Parse.VarInt.get_tag",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt8.v", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_170c491d753eea3cee6b4f8d9bab70e1",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_eb597295cc732ea30a1a82b5934ac7ee",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint64_to_uint8", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_LowParse.Spec.BitFields.uint8",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.get_msb",
        "typing_QUIC.Parse.VarInt.get_tag"
      ],
      0,
      "6ac00cbeabb7396c30daf0e007886544"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Parse.VarInt.varint_bound",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt64.v", "typing_Prims.pow2",
        "typing_QUIC.Parse.VarInt.varint_bound"
      ],
      0,
      "dbd52dd5b2fcb8f38e8f5f647998135c"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.from_vec.fuel_instrumented",
        "@fuel_irrelevance_FStar.UInt.to_vec.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.UInt32_pretyping_041e3a67a2d2b51fd702f1f88cfc3b44",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_749e7553be79870b3f9245eb0105cd99",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_cab2a0e6c05fb6f71bbcd44f41b9dd42",
        "LowParse.Spec.BitFields_interpretation_Tm_arrow_d57f39e9ef175950c08a90848f70a3a8",
        "Prims_pretyping_ae567c2fb75be05905677af440075565",
        "Prims_pretyping_f537159ed795b314b4e58c260361ae86",
        "assumption_FStar.UInt8.t__uu___haseq", "b2t_def", "bool_inversion",
        "bool_typing", "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.Spec.BitFields.Mkuint_t",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.BitVector.bv_t",
        "equation_FStar.BitVector.shift_left_vec",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.shift_left", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_FStar.UInt64.lt",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.BitFields.bitfield_mask",
        "equation_LowParse.BitFields.bitfield_mask8",
        "equation_LowParse.BitFields.get_bitfield",
        "equation_LowParse.BitFields.get_bitfield8",
        "equation_LowParse.BitFields.get_bitfield_raw",
        "equation_LowParse.BitFields.not_bitfield_mask8",
        "equation_LowParse.BitFields.set_bitfield8",
        "equation_LowParse.BitFields.u8_shift_left",
        "equation_LowParse.BitFields.u8_shift_right",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.serializer",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BitFields.bitfield",
        "equation_LowParse.Spec.BitFields.uint8",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.get_first_byte",
        "equation_QUIC.Parse.VarInt.get_msb",
        "equation_QUIC.Parse.VarInt.get_tag",
        "equation_QUIC.Parse.VarInt.parse_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_",
        "equation_QUIC.Parse.VarInt.serialize_varint_payload",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_msb_t",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_FStar.UInt.to_vec.fuel_instrumented",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_FStar.UInt32.t",
        "function_token_typing_FStar.UInt8.t",
        "function_token_typing_FStar.UInt8.uint_to_t",
        "function_token_typing_FStar.UInt8.v",
        "function_token_typing_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "function_token_typing_Prims.__cache_version_number__",
        "function_token_typing_Prims.bool", "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_FStar.UInt.index_to_vec_ones",
        "lemma_FStar.UInt.inverse_num_lemma", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt.shift_left_value_lemma",
        "lemma_FStar.UInt32.vu_inv", "lemma_FStar.UInt64.uv_inv",
        "lemma_FStar.UInt64.vu_inv", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv",
        "lemma_LowParse.Spec.Base.serialize_length",
        "lemma_LowParse.Spec.BitFields.uint_get_bitfield_set_bitfield_other",
        "lemma_LowParse.Spec.BitFields.uint_get_bitfield_set_bitfield_same",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_set_bitfield",
        "proj_equation_LowParse.Spec.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_get_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_set_bitfield",
        "projection_inverse_LowParse.Spec.BitFields.Mkuint_t_v",
        "refinement_interpretation_Tm_refine_170c491d753eea3cee6b4f8d9bab70e1",
        "refinement_interpretation_Tm_refine_1a1f114a01fda1d6d60467e846f0e43a",
        "refinement_interpretation_Tm_refine_1c46ea0c48f091c432c010e697623264",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_279a02002c16e48072a67c9dfe25c56b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_40913005fcdb02d3c1a9de40e3088fb6",
        "refinement_interpretation_Tm_refine_40a24c6c363915cd0813473da688de21",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_46f26b4cf192214f98f45c83c05cdd64",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5bbb8b03b6fd53e5fa3fdaee7efdcca0",
        "refinement_interpretation_Tm_refine_60e95c809640d020e84e558feebbedbc",
        "refinement_interpretation_Tm_refine_689af9466f50f143e51c7e8270f2cee2",
        "refinement_interpretation_Tm_refine_70607fcbfded0b4705794d232ad25eef",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_79d30f0bd2097427fe8d96697e20df0f",
        "refinement_interpretation_Tm_refine_7e0b9b2dbca36eab00de093c1b701c6d",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_85bc66aa0a6134f1e67aa8128884d53c",
        "refinement_interpretation_Tm_refine_8db5bc3e058ba8660f1d29f550410f79",
        "refinement_interpretation_Tm_refine_90006bdd68137b4dfdd43e60a3b52cf4",
        "refinement_interpretation_Tm_refine_90f3e88ac21bdb91e42538f99dc76067",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b8098f64c5fc91d829ecde5fd423a30a",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bdf70e7b49e7a42ff21696f8c44d44a0",
        "refinement_interpretation_Tm_refine_c1424615841f28cac7fc34e92b7ff33c",
        "refinement_interpretation_Tm_refine_c6c18a7ceb46d419c35ff8551117551e",
        "refinement_interpretation_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "refinement_interpretation_Tm_refine_c9e761bfcbc2fe63ca85382e0da61d9f",
        "refinement_interpretation_Tm_refine_cea82fdb2c3c307d773cae3c18ebf2b8",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e2d5d62a90ceed8a6faf9d20615f4e1e",
        "refinement_interpretation_Tm_refine_eb597295cc732ea30a1a82b5934ac7ee",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_f53dbabf36543e6603d3884a7abe5c9d",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_kinding_Tm_refine_c841d16e5c127be57e9ddb4f900a8e5a",
        "token_correspondence_FStar.UInt.to_vec.fuel_instrumented",
        "token_correspondence_LowParse.BitFields.get_bitfield8",
        "token_correspondence_LowParse.BitFields.set_bitfield8",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__set_bitfield",
        "token_correspondence_LowParse.Spec.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32",
        "typing_FStar.Int.Cast.uint64_to_uint8",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt.lt",
        "typing_FStar.UInt.to_vec", "typing_FStar.UInt32.uint_to_t",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.div", "typing_FStar.UInt64.lte",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.rem",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.logand", "typing_FStar.UInt8.logor",
        "typing_FStar.UInt8.v", "typing_LowParse.BitFields.bitfield_mask",
        "typing_LowParse.BitFields.bitfield_mask8",
        "typing_LowParse.BitFields.not_bitfield_mask8",
        "typing_LowParse.BitFields.u8_shift_left",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.BitFields.uint8",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Combinators.serialize_nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_QUIC.Parse.VarInt.get_first_byte",
        "typing_QUIC.Parse.VarInt.get_msb",
        "typing_QUIC.Parse.VarInt.get_tag",
        "typing_QUIC.Parse.VarInt.serialize_varint_payload",
        "typing_QUIC.Parse.VarInt.varint_bound", "unit_inversion",
        "unit_typing"
      ],
      0,
      "23c7bf76ac57beb2d9df81e99541a33f"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "892b93ee67eee9f88ae5879bdb8b9d64"
    ],
    [
      "QUIC.Parse.VarInt.serialize_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "QUIC.Parse.VarInt_interpretation_Tm_ghost_arrow_39d1cd22875ef829c9cabc95e40cb6f2",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_QUIC.Parse.VarInt.serialize_varint_",
        "token_correspondence_QUIC.Parse.VarInt.serialize_varint_"
      ],
      0,
      "6a66b36eaa6efdcae7f2c537c0994839"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_Prims.nat", "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "79a441cb79a8a06fbb17c11d3213cd87"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "bb02cf937b7dfe7362dd6676425b0153"
    ],
    [
      "QUIC.Parse.VarInt.parse_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "ef5b5149a7be1d030b049084abe0236d"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "99b163d650b8a9e75288f558e0996a1c"
    ],
    [
      "QUIC.Parse.VarInt.synth_bounded_varint_recip",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.varint_bound",
        "equation_QUIC.Parse.VarInt.varint_in_bounds", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.BoundedInt.in_bounds"
      ],
      0,
      "2e3b2cb8dc66b489e0815ddd808055a9"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "df15810e16a080544ee94cd5401503c9"
    ],
    [
      "QUIC.Parse.VarInt.serialize_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_1025131e89f275d42cb7d6a3b0e6e1e7",
        "QUIC.Parse.VarInt_interpretation_Tm_arrow_d81abe167fb75473bbfd9523c6fc3461",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Parse.VarInt.parse_varint_kind",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint",
        "equation_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Parse.VarInt.varint_in_bounds",
        "equation_QUIC.Parse.VarInt.varint_t",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Negation",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_01d132366e0a6875548563edf61ade1b",
        "refinement_interpretation_Tm_refine_21e94d81ba30d97ef8ce075f9a843f09",
        "refinement_interpretation_Tm_refine_297076ce5105b8e056a0a0922b8a35e0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_94c65045d00b06f678f0a0e5789c997e",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Parse.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Parse.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_Prims.pow2", "typing_QUIC.Parse.VarInt.synth_bounded_varint",
        "typing_QUIC.Parse.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "5a26f77f1ceaf931221e923050d42738"
    ]
  ]
]