[
  "\u0006\u000f†\u0013éò i‡p\u000eie\u0012ß\n",
  [
    [
      "QUIC.Spec.VarInt.synth_u14",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v", "typing_QUIC.UInt62.bound"
      ],
      0,
      "789780f689ff6525be74857be4cae4a2"
    ],
    [
      "QUIC.Spec.VarInt.synth_u14_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.synth_u14",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "lemma_FStar.UInt8.uv_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.v"
      ],
      0,
      "9d4ae9a33feb5a0276aa1010816c446b"
    ],
    [
      "QUIC.Spec.VarInt.synth_u30",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.UInt62.bound"
      ],
      0,
      "ce6249ccf6d03549a1a4643648df31a5"
    ],
    [
      "QUIC.Spec.VarInt.synth_u30_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.synth_u30",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "5c572743f3d3716e3bf2a32f7d2343bf"
    ],
    [
      "QUIC.Spec.VarInt.synth_u62",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_QUIC.UInt62.bound"
      ],
      0,
      "c266102b2b09122649c3ec59d4b7a502"
    ],
    [
      "QUIC.Spec.VarInt.synth_u62_msb",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.synth_u62",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "7f6ed2092333b25a51bf66c721c9243a"
    ],
    [
      "QUIC.Spec.VarInt.synth_u62_injective",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.synth_u62",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_u62",
        "typing_FStar.Int.Cast.uint32_to_uint64", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v"
      ],
      0,
      "7974c13505f82d7fc8d38a8efae748b0"
    ],
    [
      "QUIC.Spec.VarInt.id_u14",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "5fd1e7c1bd5897072525531c7f3eebb7"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_u14",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.id_u14",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "int_inversion", "lemma_QUIC.Spec.VarInt.synth_u14_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.id_u14",
        "typing_FStar.UInt64.v"
      ],
      0,
      "f8c09a22fca49e5035579b6c600fb551"
    ],
    [
      "QUIC.Spec.VarInt.id_u30",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "1e95579eb5872083bce7e17e0a6c878a"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_u30",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataFail",
        "constructor_distinct_LowParse.Spec.Base.ParserKindMetadataTotal",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.id_u30",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "int_inversion", "lemma_QUIC.Spec.VarInt.synth_u30_injective",
        "primitive_Prims.op_AmpAmp",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.id_u30",
        "typing_FStar.UInt64.v"
      ],
      0,
      "0a9be66bfb0393d6f283edcd3ba15553"
    ],
    [
      "QUIC.Spec.VarInt.id_u62",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "229233e7e07c2e324d11584429cf203b"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_u62",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.parser_kind_metadata_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u32_kind", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.id_u62",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "int_inversion", "int_typing", "lemma_FStar.Pervasives.invertOption",
        "lemma_QUIC.Spec.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_212e5740a90843022bc32fa3370d3b35",
        "refinement_interpretation_Tm_refine_41220e6bcefbf498bb997286517845c2",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_9570fecf666a6e39c07cb510aecea8ba",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_QUIC.Spec.VarInt.id_u62",
        "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_metadata",
        "typing_LowParse.Spec.Base.bool_and",
        "typing_LowParse.Spec.Base.is_some",
        "typing_LowParse.Spec.Base.some_v",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.Combinators.and_then_metadata",
        "typing_LowParse.Spec.Int.parse_u32_kind"
      ],
      0,
      "1a4eaff5769b211c66ee6bcdaaf1ba6f"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_14_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.pos", "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.filter_u14",
        "equation_QUIC.Spec.VarInt.id_u14",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Spec.VarInt.synth_u14",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_Lib.IntTypes.byte_t", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Spec.VarInt.synth_u14_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_QUIC.Spec.VarInt.id_u14",
        "token_correspondence_QUIC.Spec.VarInt.synth_u14",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.add",
        "typing_FStar.UInt64.mul", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8", "typing_Prims.pow2",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_u14",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "9f85ee74406814f07191f66d16e2aa33"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_30_interval",
      1,
      2,
      2,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "data_elim_FStar.Pervasives.Native.Mktuple2",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.filter_u30",
        "equation_QUIC.Spec.VarInt.id_u30",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Spec.VarInt.synth_u30",
        "equation_QUIC.Spec.VarInt.varint_msb_t", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Spec.VarInt.synth_u30_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Spec.VarInt.id_u30",
        "token_correspondence_QUIC.Spec.VarInt.synth_u30",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_u30"
      ],
      0,
      "71eb28c1cb964e4e601c9608e992479e"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_62_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_elim_FStar.Pervasives.Native.Some",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lte",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lte",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Prims.squash", "equation_QUIC.Spec.VarInt.filter_u62",
        "equation_QUIC.Spec.VarInt.id_u62", "equation_QUIC.Spec.VarInt.p7",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "function_token_typing_QUIC.Spec.VarInt.synth_u62", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_QUIC.Spec.VarInt.synth_u62_injective",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Spec.VarInt.id_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt32.t", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse", "typing_QUIC.UInt62.bound"
      ],
      0,
      "c5bc3438fd1be2e55a1d28ab4e6bb886"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Spec.Base.is_weaker_than",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Combinators.parse_ret_kind",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.vu_inv", "lemma_Lib.IntTypes.pow2_3",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "955e1f229b47eb2a6ee7555b491b454f"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_interval",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "b2t_def", "bool_inversion", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.Combinators.parse_ret",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.parse_varint_payload",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.UInt8.uv_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt8.t",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound", "unit_inversion", "unit_typing"
      ],
      0,
      "5803d9869a54ee2ae20ffb8fd53e1326"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_payload_and_then_cases_injective",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.Spec.Combinators.and_then_cases_injective_precond",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_typing", "lemma_FStar.UInt8.uv_inv",
        "lemma_LowParse.BitFields.uint8_v_eq", "primitive_Prims.op_Equality",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_QUIC.Spec.VarInt.parse_varint_payload",
        "typing_FStar.UInt8.t", "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "d165ccec72a14dd858f2be72f3b2e07b"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "f8cdf535859f658d5f6975dbfc26c58e"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "LowParse.Spec.Base_pretyping_e24e8cabdb5c58cdc1d812d5f6f285ec",
        "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserConsumesAll@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "function_token_typing_QUIC.Spec.VarInt.parse_varint_payload_and_then_cases_injective",
        "int_inversion", "int_typing", "primitive_Prims.op_Addition",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Equality",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_212e5740a90843022bc32fa3370d3b35",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_41220e6bcefbf498bb997286517845c2",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_9570fecf666a6e39c07cb510aecea8ba",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.bool_and",
        "typing_LowParse.Spec.Base.is_some",
        "typing_LowParse.Spec.Base.some_v",
        "typing_LowParse.Spec.Int.parse_u8_kind"
      ],
      0,
      "746d9cfc867ad11e7072a0a7c42daafe"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_eq_aux",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Tm_unit",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_LowParse.Bytes.byte",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Combinators.and_then_bare",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.nat",
        "equation_Prims.squash", "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_and_then_cases_injective",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_QUIC.Spec.VarInt.parse_varint_payload",
        "function_token_typing_QUIC.Spec.VarInt.parse_varint_payload_and_then_cases_injective",
        "interpretation_Tm_abs_9d01667ee4745c074a54c2f8d14f7c92",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_2de20c066034c13bf76e9c0b94f4806c",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_6cde7e47cfcc4d3cc2e3853acbcc2109",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "token_correspondence_LowParse.Spec.Combinators.and_then_bare",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt64.v",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_QUIC.Spec.VarInt.parse_varint", "typing_QUIC.UInt62.bound"
      ],
      0,
      "778118e8233e1b86e265f4aee51cca31"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint'",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.size_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.UInt62.bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_Lib.IntTypes.pow2_3", "lemma_LowParse.BitFields.uint8_v_eq",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_596b1ea49138dc5c887a99094c6d0ff0",
        "refinement_interpretation_Tm_refine_6cde7e47cfcc4d3cc2e3853acbcc2109",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.v", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.t", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.BoundedInt.bounded_integer",
        "typing_Prims.pow2", "typing_QUIC.UInt62.bound"
      ],
      0,
      "c15381b496d4a04fc39672ae131510af"
    ],
    [
      "QUIC.Spec.VarInt.parse_varint_eq",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "FStar.Pervasives.Native_pretyping_b53dbd183c526bc5d0f20d7b966ae125",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_7094f89c3ffbfb4f8dfc4e87709ab824",
        "LowParse.BitFields_interpretation_Tm_arrow_acb4ab7dcb62aa643f35d398a969dd1c",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "Prims_pretyping_f8666440faa91836cc5a13998af863fc", "b2t_def",
        "bool_inversion",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_FStar.Pervasives.Native.option",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Prims.unit", "constructor_distinct_Tm_unit",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.BitFields.ubitfield",
        "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.consumed_length",
        "equation_LowParse.Spec.Base.parse",
        "equation_LowParse.Spec.Base.parser",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.Base.weaken",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.parse_ret",
        "equation_LowParse.Spec.Combinators.parse_synth_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.filter_u14",
        "equation_QUIC.Spec.VarInt.filter_u30",
        "equation_QUIC.Spec.VarInt.filter_u62",
        "equation_QUIC.Spec.VarInt.id_u14",
        "equation_QUIC.Spec.VarInt.id_u30",
        "equation_QUIC.Spec.VarInt.id_u62", "equation_QUIC.Spec.VarInt.p7",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u14",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u30",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_u62",
        "equation_QUIC.Spec.VarInt.synth_u14",
        "equation_QUIC.Spec.VarInt.synth_u30",
        "equation_QUIC.Spec.VarInt.synth_u62",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_FStar.Pervasives.Native.option",
        "fuel_guarded_inversion_FStar.Pervasives.Native.tuple2",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_2a69eb703ad5757f1a9387ab66f7a41e",
        "interpretation_Tm_abs_62de3ca79da9616b96ec3f6a5a65f969",
        "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Pervasives.invertOption", "lemma_FStar.UInt8.uv_inv",
        "lemma_FStar.UInt8.vu_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_QUIC.Spec.VarInt.synth_u14_injective",
        "lemma_QUIC.Spec.VarInt.synth_u30_injective",
        "lemma_QUIC.Spec.VarInt.synth_u62_injective",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Equality", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_get_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.None_a",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_46f0f7397c7c3702e511c14de149df97",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_596b1ea49138dc5c887a99094c6d0ff0",
        "refinement_interpretation_Tm_refine_6cde7e47cfcc4d3cc2e3853acbcc2109",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_8ac009b0c47f21c12e87c1cf8d6c5c56",
        "refinement_interpretation_Tm_refine_956bc881132332bd221131ea988e10db",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_kinding_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "token_correspondence_LowParse.Spec.Combinators.parse_synth_",
        "token_correspondence_QUIC.Spec.VarInt.id_u14",
        "token_correspondence_QUIC.Spec.VarInt.id_u30",
        "token_correspondence_QUIC.Spec.VarInt.id_u62",
        "token_correspondence_QUIC.Spec.VarInt.synth_u14",
        "token_correspondence_QUIC.Spec.VarInt.synth_u30",
        "token_correspondence_QUIC.Spec.VarInt.synth_u62",
        "typing_FStar.Pervasives.Native.uu___is_Some",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.t", "typing_LowParse.BitFields.get_bitfield",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.consumed_length",
        "typing_LowParse.Spec.Base.parse",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.Int.parse_u8", "typing_QUIC.Spec.VarInt.p7",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_payload",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.UInt62.bound", "unit_inversion", "unit_typing"
      ],
      0,
      "39295dd000d76af369cd6ad22bc9778c"
    ],
    [
      "QUIC.Spec.VarInt.get_tag",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Prims.nat", "equation_Prims.pos", "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt8.vu_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_Lib.IntTypes.pow2_3", "lemma_LowParse.BitFields.uint8_v_eq",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_25c72d704900d626b30894312c325451",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.uint_to_t", "typing_Prims.pow2"
      ],
      0,
      "187e360f698ccf5d670ff2a4c4e94933"
    ],
    [
      "QUIC.Spec.VarInt.get_msb",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def", "bool_inversion",
        "bool_typing", "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_Prims.nat",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "int_inversion", "int_typing", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt.fits", "typing_FStar.UInt64.v",
        "typing_QUIC.UInt62.bound"
      ],
      0,
      "8b04ea059244d04c30304176d455d8ce"
    ],
    [
      "QUIC.Spec.VarInt.get_first_byte",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_FStar.Int.Cast.uint64_to_uint8",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t",
        "equation_LowParse.BitFields.bitfield", "equation_Prims.nat",
        "equation_Prims.pos", "equation_QUIC.Spec.VarInt.get_msb",
        "equation_QUIC.Spec.VarInt.get_tag",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_Lib.IntTypes.pow2_3",
        "lemma_Lib.IntTypes.pow2_4", "lemma_LowParse.BitFields.uint8_v_eq",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_0d41224c682684630fd89def512a35ee",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe6ede4f8e6d9788d0e2570cc7686e3a",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "typing_FStar.Int.Cast.uint64_to_uint8", "typing_FStar.UInt64.v",
        "typing_Prims.pow2", "typing_QUIC.Spec.VarInt.get_msb",
        "typing_QUIC.Spec.VarInt.get_tag"
      ],
      0,
      "ecb2029f01ed162bcd4ede2bb2ed700e"
    ],
    [
      "QUIC.Spec.VarInt.serialize_varint_payload",
      1,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query", "b2t_def",
        "equation_FStar.UInt.mod", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "int_inversion", "primitive_Prims.op_Division",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_21817eb665f80560822aa069c1609a15",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt64.v", "typing_QUIC.UInt62.bound"
      ],
      0,
      "e9cf1fdbac0ed53e9002fed85135c899"
    ],
    [
      "QUIC.Spec.VarInt.serialize_varint_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.BitFields_interpretation_Tm_arrow_287045403e95c67bcea3777193044cbd",
        "LowParse.BitFields_interpretation_Tm_arrow_43e5a45fdd3f49e07f563663eb8d10aa",
        "LowParse.BitFields_interpretation_Tm_arrow_d4548d65475ce11a2c52f5391370abb0",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "Prims_pretyping_ae567c2fb75be05905677af440075565", "b2t_def",
        "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "data_elim_LowParse.BitFields.Mkuint_t",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.None",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.Int.Cast.uint64_to_uint8",
        "equation_FStar.Int.Cast.uint8_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.lt",
        "equation_FStar.UInt.lte", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_FStar.UInt64.lt", "equation_FStar.UInt64.lte",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.size_t",
        "equation_LowParse.BitFields.bitfield",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.serializer",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.get_first_byte",
        "equation_QUIC.Spec.VarInt.get_msb",
        "equation_QUIC.Spec.VarInt.get_tag",
        "equation_QUIC.Spec.VarInt.parse_varint_",
        "equation_QUIC.Spec.VarInt.serialize_varint_",
        "equation_QUIC.Spec.VarInt.serialize_varint_payload",
        "equation_QUIC.Spec.VarInt.varint_msb_t",
        "equation_QUIC.UInt62.bound", "equation_QUIC.UInt62.t",
        "fuel_guarded_inversion_LowParse.BitFields.uint_t",
        "function_token_typing_Lib.IntTypes.size_t",
        "function_token_typing_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "function_token_typing_Prims.__cache_version_number__",
        "int_inversion", "int_typing", "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_app1",
        "lemma_FStar.Seq.Base.lemma_index_app2",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_length",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.vu_inv",
        "lemma_FStar.UInt64.uv_inv", "lemma_FStar.UInt64.vu_inv",
        "lemma_FStar.UInt8.vu_inv", "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.BitFields.uint8_v_eq",
        "lemma_LowParse.BitFields.uint_get_bitfield_set_bitfield_other",
        "lemma_LowParse.BitFields.uint_get_bitfield_set_bitfield_same",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_Equality",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "proj_equation_LowParse.BitFields.Mkuint_t_set_bitfield",
        "proj_equation_LowParse.BitFields.Mkuint_t_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_05982104aac7ba7bc6ee5afcbb6b1255",
        "refinement_interpretation_Tm_refine_06f2bf4950bb76094f7b7f43daea2409",
        "refinement_interpretation_Tm_refine_08bf9d9d931b001e92f2e24a44c245f1",
        "refinement_interpretation_Tm_refine_0c1daaecd795aae59b148a9741dc0286",
        "refinement_interpretation_Tm_refine_0d41224c682684630fd89def512a35ee",
        "refinement_interpretation_Tm_refine_25c72d704900d626b30894312c325451",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_2905e4cd1a81244ae97dc5c62563e060",
        "refinement_interpretation_Tm_refine_2ac8bed7a6398f84bccb91bd4fed7136",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_40a24c6c363915cd0813473da688de21",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_449a67c4e7b3668359ff027bbbafeac4",
        "refinement_interpretation_Tm_refine_46f26b4cf192214f98f45c83c05cdd64",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_60e95c809640d020e84e558feebbedbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_7e0b9b2dbca36eab00de093c1b701c6d",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_94d25b6e0041d543efd58300424ecc37",
        "refinement_interpretation_Tm_refine_a227ad0d71254edda31227d9c263f41f",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_ac201cf927190d39c033967b63cb957b",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_bc552b2c624e2add758b3ac761c0c563",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_e50e38335ccd575c1e7399719feab2c7",
        "refinement_interpretation_Tm_refine_edccc421660c61e3591d98071500d795",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_interpretation_Tm_refine_fe6ede4f8e6d9788d0e2570cc7686e3a",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__get_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__set_bitfield",
        "token_correspondence_LowParse.BitFields.__proj__Mkuint_t__item__v",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32",
        "typing_FStar.Int.Cast.uint64_to_uint8",
        "typing_FStar.Int.Cast.uint8_to_uint64",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt.fits", "typing_FStar.UInt.lt",
        "typing_FStar.UInt64.add", "typing_FStar.UInt64.div",
        "typing_FStar.UInt64.lte", "typing_FStar.UInt64.mul",
        "typing_FStar.UInt64.rem", "typing_FStar.UInt64.uint_to_t",
        "typing_FStar.UInt64.v", "typing_FStar.UInt8.t",
        "typing_FStar.UInt8.uint_to_t", "typing_FStar.UInt8.v",
        "typing_LowParse.BitFields.uint8",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_low",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_LowParse.Spec.Combinators.serialize_nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_LowParse.Spec.Int.serialize_u8", "typing_Prims.pow2",
        "typing_QUIC.Spec.VarInt.get_first_byte",
        "typing_QUIC.Spec.VarInt.get_msb", "typing_QUIC.Spec.VarInt.get_tag",
        "typing_QUIC.Spec.VarInt.serialize_varint_payload",
        "typing_QUIC.UInt62.bound", "unit_inversion", "unit_typing"
      ],
      0,
      "b00cece0daa8f0c86f59e00f1b5d35d2"
    ],
    [
      "QUIC.Spec.VarInt.serialize_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "b7c8febc71fc984a95c599f605f41527"
    ],
    [
      "QUIC.Spec.VarInt.serialize_varint",
      2,
      2,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "QUIC.Spec.VarInt_interpretation_Tm_ghost_arrow_233241a540264af31eb97bdb9731ee71",
        "equation_LowParse.Spec.Base.serializer_correct",
        "equation_QUIC.UInt62.t",
        "function_token_typing_QUIC.Spec.VarInt.serialize_varint_",
        "token_correspondence_QUIC.Spec.VarInt.serialize_varint_"
      ],
      0,
      "3a029476a36fe4cf717a89e2aa299c1a"
    ],
    [
      "QUIC.Spec.VarInt.synth_bounded_varint",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v"
      ],
      0,
      "261db45f091c4a57ed748815d3777552"
    ],
    [
      "QUIC.Spec.VarInt.parse_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "e6861f65b6cb1c0bf4c4156225c46bcf"
    ],
    [
      "QUIC.Spec.VarInt.parse_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt64.v",
        "typing_Prims.pow2"
      ],
      0,
      "563c25af2e2c69d94ae5207c61d1c16b"
    ],
    [
      "QUIC.Spec.VarInt.synth_bounded_varint_recip",
      1,
      2,
      1,
      [ "@query" ],
      0,
      "e3baf4701bfbcfa9bd8e6a0dec333810"
    ],
    [
      "QUIC.Spec.VarInt.synth_bounded_varint_recip",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.Int.Cast.uint32_to_uint64",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.bound",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_inversion",
        "int_typing", "lemma_FStar.UInt.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_cac8aa68b54068bf033c8d3d335357f8",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_QUIC.UInt62.bound"
      ],
      0,
      "30bbd5d665490077d7011eddab6bebfd"
    ],
    [
      "QUIC.Spec.VarInt.serialize_bounded_varint",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "ca143c6719e487b7c5e0d17635d893da"
    ],
    [
      "QUIC.Spec.VarInt.serialize_bounded_varint",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_04e35d6abc5e56e52014742b6ae34b23",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_3c922a2dcd057b084dbfbc6fab52e173",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat", "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing", "lemma_FStar.UInt.pow2_values",
        "lemma_FStar.UInt32.uv_inv", "lemma_FStar.UInt64.uv_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v"
      ],
      0,
      "1252a21ff1f01082c8d3866f28615b52"
    ],
    [
      "QUIC.Spec.VarInt.varint_len_correct",
      1,
      2,
      1,
      [
        "@query", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low"
      ],
      0,
      "df9002e991f04c084e17d080504fbeef"
    ],
    [
      "QUIC.Spec.VarInt.varint_len_correct",
      2,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.Some",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_FStar.Pervasives.Native.Some",
        "data_typing_intro_FStar.Pervasives.Native.Mktuple2@tok",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "disc_equation_FStar.Pervasives.Native.Some",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_LowParse.Spec.Base.ParserKindMetadataTotal@tok",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.Int.Cast.uint64_to_uint8",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.mod",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.byte_t", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.size_t",
        "equation_LowParse.Bytes.byte", "equation_LowParse.Bytes.bytes",
        "equation_LowParse.Spec.Base.parser_kind",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.Base.strong_parser_kind",
        "equation_LowParse.Spec.Base.total_constant_size_parser_kind",
        "equation_LowParse.Spec.BoundedInt.bounded_integer",
        "equation_LowParse.Spec.BoundedInt.bounded_integer_prop",
        "equation_LowParse.Spec.BoundedInt.integer_size",
        "equation_LowParse.Spec.BoundedInt.parse_bounded_integer_kind",
        "equation_LowParse.Spec.Combinators.and_then_kind",
        "equation_LowParse.Spec.Int.parse_u32_kind",
        "equation_LowParse.Spec.Int.parse_u8_kind", "equation_Prims.eqtype",
        "equation_Prims.nat", "equation_Prims.pos",
        "equation_QUIC.Spec.Base.varint_len",
        "equation_QUIC.Spec.VarInt.get_first_byte",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint_",
        "equation_QUIC.Spec.VarInt.serialize_varint_payload",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Lib.IntTypes.size_t", "int_inversion",
        "int_typing", "kinding_FStar.Pervasives.Native.tuple2@tok",
        "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "lemma_Lib.IntTypes.pow2_2",
        "lemma_LowParse.Spec.Base.serialize_length",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_Division", "primitive_Prims.op_LessThan",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Modulus",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_a",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "refinement_interpretation_Tm_refine_06f2bf4950bb76094f7b7f43daea2409",
        "refinement_interpretation_Tm_refine_0d41224c682684630fd89def512a35ee",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_2905e4cd1a81244ae97dc5c62563e060",
        "refinement_interpretation_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_42417c0a732848736b70205b54b36236",
        "refinement_interpretation_Tm_refine_48c1b5b4c02ad49f0760911a9d4b1fb4",
        "refinement_interpretation_Tm_refine_4d5241eb6fe198666a8101195bbd4a2a",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_60e95c809640d020e84e558feebbedbc",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_79780233e567b4a9c09b9410edebc7c8",
        "refinement_interpretation_Tm_refine_94d25b6e0041d543efd58300424ecc37",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_b913a3f691ca99086652e0a655e72f17",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "refinement_kinding_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_kinding_Tm_refine_33418b97345bc05dd64a38e6e1356913",
        "refinement_kinding_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_QUIC.Spec.VarInt.serialize_varint_",
        "typing_FStar.Int.Cast.uint64_to_uint32",
        "typing_FStar.Int.Cast.uint64_to_uint8",
        "typing_FStar.Pervasives.Native.__proj__Some__item__v",
        "typing_FStar.Seq.Base.empty", "typing_FStar.Seq.Base.length",
        "typing_FStar.UInt64.div", "typing_FStar.UInt64.rem",
        "typing_FStar.UInt64.uint_to_t", "typing_FStar.UInt64.v",
        "typing_FStar.UInt8.t",
        "typing_LowParse.Spec.Base.__proj__Mkparser_kind___item__parser_kind_high",
        "typing_LowParse.Spec.Base.serialize",
        "typing_LowParse.Spec.Base.total_constant_size_parser_kind",
        "typing_LowParse.Spec.BoundedInt.parse_bounded_integer",
        "typing_LowParse.Spec.BoundedInt.serialize_bounded_integer",
        "typing_LowParse.Spec.Combinators.and_then_kind",
        "typing_LowParse.Spec.Combinators.nondep_then",
        "typing_LowParse.Spec.Combinators.serialize_nondep_then",
        "typing_LowParse.Spec.Int.parse_u32",
        "typing_LowParse.Spec.Int.parse_u32_kind",
        "typing_LowParse.Spec.Int.parse_u8",
        "typing_LowParse.Spec.Int.parse_u8_kind",
        "typing_LowParse.Spec.Int.serialize_u32",
        "typing_LowParse.Spec.Int.serialize_u8",
        "typing_QUIC.Spec.VarInt.get_first_byte",
        "typing_QUIC.Spec.VarInt.parse_varint",
        "typing_QUIC.Spec.VarInt.parse_varint_kind",
        "typing_QUIC.Spec.VarInt.parse_varint_payload_kind",
        "typing_QUIC.Spec.VarInt.serialize_varint",
        "typing_QUIC.Spec.VarInt.serialize_varint_",
        "typing_QUIC.Spec.VarInt.serialize_varint_payload"
      ],
      0,
      "6236a3e265a9fb3f79e329446f8fef67"
    ],
    [
      "QUIC.Spec.VarInt.bounded_varint_len_correct",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds", "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.UInt62.bound", "int_inversion", "int_typing",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt64.vu_inv",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "typing_FStar.UInt32.v", "typing_LowParse.Spec.BoundedInt.in_bounds"
      ],
      0,
      "7351650dc501bbfa880ec4ad0a0138cb"
    ],
    [
      "QUIC.Spec.VarInt.bounded_varint_len_correct",
      2,
      2,
      1,
      [ "@query" ],
      0,
      "a2063358a2eb649ce6c8a697ca8f45a7"
    ],
    [
      "QUIC.Spec.VarInt.bounded_varint_len_correct",
      3,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "LowParse.Spec.Base_pretyping_753dfb8f8ba156874c914a94190399fd",
        "QUIC.Spec.VarInt_interpretation_Tm_arrow_04e35d6abc5e56e52014742b6ae34b23",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_FStar.Pervasives.Native.None",
        "data_typing_intro_LowParse.Spec.Base.ParserKindMetadataFail@tok",
        "equation_FStar.Int.Cast.uint64_to_uint32",
        "equation_FStar.UInt.fits", "equation_FStar.UInt.max_int",
        "equation_FStar.UInt.min_int", "equation_FStar.UInt.size",
        "equation_FStar.UInt.uint_t",
        "equation_LowParse.Spec.Base.serialize",
        "equation_LowParse.Spec.BoundedInt.bounded_int32",
        "equation_LowParse.Spec.BoundedInt.in_bounds",
        "equation_LowParse.Spec.Combinators.parse_filter_kind",
        "equation_LowParse.Spec.Combinators.parse_filter_refine",
        "equation_LowParse.Spec.Combinators.serialize_filter",
        "equation_LowParse.Spec.Combinators.serialize_filter_",
        "equation_LowParse.Spec.Combinators.synth_injective",
        "equation_LowParse.Spec.Combinators.synth_inverse",
        "equation_Prims.nat",
        "equation_QUIC.Spec.VarInt.parse_bounded_varint",
        "equation_QUIC.Spec.VarInt.parse_varint",
        "equation_QUIC.Spec.VarInt.parse_varint_kind",
        "equation_QUIC.Spec.VarInt.serialize_bounded_varint",
        "equation_QUIC.Spec.VarInt.serialize_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint",
        "equation_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "equation_QUIC.Spec.VarInt.varint_in_bounds",
        "equation_QUIC.UInt62.t",
        "equation_with_fuel_Prims.pow2.fuel_instrumented",
        "fuel_guarded_inversion_LowParse.Spec.Base.parser_kind_",
        "function_token_typing_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "int_inversion", "int_typing",
        "interpretation_Tm_abs_bfa8dcf99c826252d218c81445ca4d3d",
        "lemma_FStar.UInt.pow2_values", "lemma_FStar.UInt32.uv_inv",
        "lemma_FStar.UInt64.uv_inv", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Modulus", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Negation", "primitive_Prims.op_Subtraction",
        "proj_equation_FStar.Pervasives.Native.Some_v",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "proj_equation_LowParse.Spec.Base.Mkparser_kind__parser_kind_subkind",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_FStar.Pervasives.Native.Some_v",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_high",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_low",
        "projection_inverse_LowParse.Spec.Base.Mkparser_kind__parser_kind_metadata",
        "refinement_interpretation_Tm_refine_273a1530d76e73d9165a401362cc3042",
        "refinement_interpretation_Tm_refine_4689762d8936cd661071819a684ec9b0",
        "refinement_interpretation_Tm_refine_47a1a40ac1f83f95f3b324d5e73614ef",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a3e91433acc705e2c7f5ab6f610b2493",
        "refinement_interpretation_Tm_refine_a87dbe8fa6c2ba694a031fa266bf0206",
        "refinement_interpretation_Tm_refine_d15a9766d4c1ec94d1574f05b54a618b",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint",
        "token_correspondence_QUIC.Spec.VarInt.synth_bounded_varint_recip",
        "token_correspondence_QUIC.Spec.VarInt.varint_in_bounds",
        "typing_FStar.Int.Cast.uint32_to_uint64",
        "typing_FStar.Int.Cast.uint64_to_uint32", "typing_FStar.UInt32.v",
        "typing_FStar.UInt64.v", "typing_LowParse.Spec.BoundedInt.in_bounds",
        "typing_QUIC.Spec.VarInt.synth_bounded_varint_recip"
      ],
      0,
      "4a8d7f8e0eac6d33b89bf32be3f27239"
    ]
  ]
]